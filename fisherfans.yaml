openapi: 3.1.0
info:
  title: FisherFans API
  summary: |
   Welcome to version 1 of FisherFans API
  description:
   This is where you will find the definitive list of currently available methods for our movie, tv, actor and image API
  contact:
    name: FisherFans API
    email: contact@fisherfas.com
  version: '1'
servers:
- url: https://api.fisherfans.com
  description: Server
tags:
  - name: Authentication
    description: Gather all end points related to Authencation operations
  - name: Users
    description: Gather all end points related to users operations
  - name: Boats
    description: Gather all end points related to boats operations
  - name: Reservations
    description: Gather all end points related to reservations operations
  - name: Notebook pages
    description: Gather all end points related to notebook pages operations*
  - name: Trips
    description: Gather all end points related to trips operations
paths:
  /auth/token/new:
    post:
      summary: Create Request Token
      description: ''
      operationId: authentication-create-request-token
      tags:
        - Authentication
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    examples:
                      - true
                    default: true
                  expires_at:
                    type: string
                    examples:
                      - 2016-08-26 17:04:39 UTC
                  request_token:
                    type: string
                    examples:
                      - 0123456789abcdef0123456789abcdef01234567
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 0
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Error.
      deprecated: false
  /auth/session/new:
    post:
      summary: Create Session
      description: ''
      operationId: authentication-create-session
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - RAW_BODY
              properties:
                RAW_BODY:
                  type: string
                  format: json
            examples:
              Request Example:
                value:
                  request_token: 0123456789abcdef0123456789abcdef01234567
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    examples:
                      - true
                    default: true
                  session_id:
                    type: string
                    examples:
                      - 0123456789abcdef0123456789abcdef01234567
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 0
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Error.
      deprecated: false
  /auth/session:
    delete:
      summary: Delete Session
      description: ''
      operationId: authentication-delete-session
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - RAW_BODY
              properties:
                RAW_BODY:
                  type: string
                  format: json
            examples:
              Request Example:
                value:
                  session_id: 0123456789abcdef0123456789abcdef01234567
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    examples:
                      - true
                    default: true
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 0
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Error.
      deprecated: false
  /users:
    post:
      summary: Create new user
      description: ''
      operationId: users-create
      parameters:
        - name: last_name
          in: query
          schema:
            type: string
          required: true
        - name: first_name
          in: query
          schema:
            type: string
          required: true
        - name: email
          in: query
          schema:
            type: string
          required: true
        - name: password
          in: query
          schema:
            type: string
          required: true
        - name: birth
          in: query
          schema:
            type: string
          required: true
        - name: phone_number
          in: query
          schema:
            type: integer
          required: true
        - name: addresse
          in: query
          schema:
            type: string
          required: true
        - name: postal_code
          in: query
          schema:
            type: integer
          required: true
        - name: city
          in: query
          schema:
            type: string
          required: true
        - name: langue
          in: query
          schema:
            type: string
        - name: url_avatar
          in: query
          schema:
            type: string
        - name: boating_license_number
          in: query
          schema:
            type: integer
        - name: insurance_number
          in: query
          schema:
            type: integer
        - name: status
          in: query
          schema:
            type: string
        - name: company_name
          in: query
          schema:
            type: string
        - name: activity_type
          in: query
          schema:
            type: string
        - name: siret
          in: query
          schema:
            type: integer
        - name: RC
          in: query
          schema:
            type: string
      tags:
        - Users
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 1
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Success.
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 0
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Error.
      deprecated: false
    put:
      summary: Modify one user
      description: ''
      operationId: users-modify
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - name: last_name
          in: query
          schema:
            type: string
          required: true
        - name: first_name
          in: query
          schema:
            type: string
          required: true
        - name: email
          in: query
          schema:
            type: string
          required: true
        - name: password
          in: query
          schema:
            type: string
          required: true
        - name: birth
          in: query
          schema:
            type: string
          required: true
        - name: phone_number
          in: query
          schema:
            type: integer
          required: true
        - name: addresse
          in: query
          schema:
            type: string
          required: true
        - name: postal_code
          in: query
          schema:
            type: integer
          required: true
        - name: city
          in: query
          schema:
            type: string
          required: true
        - name: langue
          in: query
          schema:
            type: string
        - name: url_avatar
          in: query
          schema:
            type: string
        - name: boating_license_number
          in: query
          schema:
            type: integer
        - name: insurance_number
          in: query
          schema:
            type: integer
        - name: status
          in: query
          schema:
            type: string
        - name: company_name
          in: query
          schema:
            type: string
        - name: activity_type
          in: query
          schema:
            type: string
        - name: siret
          in: query
          schema:
            type: integer
        - name: RC
          in: query
          schema:
            type: string
      tags:
        - Users
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 1
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Success.
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 0
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Error.
      deprecated: false
    delete:
      summary: Delete one user
      description: ''
      operationId: users-delete
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      tags:
        - Users
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 1
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Success.
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 0
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Error.
      deprecated: false
  /users/findbypostalcode/{postal_code}:
    get:
      summary: Get one user by postal code
      description: ''
      operationId: users-get-by-postal-code
      parameters:
        - name: postal_code
          in: path
          schema:
            type: integer
          required: true
      tags:
        - Users
      responses:
        '200':
          description: 'details of users with this postal code'
          content:
            '*/*' :
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Users'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 0
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Error.
      deprecated: false
  /boats:
    post:
      summary: Create new boat
      description: ''
      operationId: boats-create
      parameters:
        - name: name
          in: query
          schema:
            type: string
          required: true
        - name: description
          in: query
          schema:
            type: string
          required: true
        - name: brand
          in: query
          schema:
            type: string
          required: true
        - name: production_year
          in: query
          schema:
            type: integer
          required: true
        - name: picture_url
          in: query
          schema:
            type: string
        - name: required_licence
          in: query
          schema:
            type: string
          required: true
        - name: type
          in: query
          schema:
            type: string
        - name: bail
          in: query
          schema:
            type: number
        - name: maximum_capacity
          in: query
          schema:
            type: integer
          required: true
        - name: bedding_number
          in: query
          schema:
            type: integer
        - name: port
          in: query
          schema:
            type: string
        - name: latitude
          in: query
          schema:
            type: number
          required: true
        - name: longitude
          in: query
          schema:
            type: number
          required: true
        - name: engine_specification
          in: query
          schema:
            type: string
        - name: power
          in: query
          schema:
            type: integer
        - name: user_id
          in: query
          schema:
            type: integer
          required: true
      tags:
        - Boats
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 1
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Success.
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 0
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Error.
      deprecated: false
    put:
      summary: Modify one boat
      description: ''
      operationId: boats-modify
      parameters:
        - name: name
          in: query
          schema:
            type: string
          required: true
        - name: description
          in: query
          schema:
            type: string
          required: true
        - name: brand
          in: query
          schema:
            type: string
          required: true
        - name: production_year
          in: query
          schema:
            type: integer
          required: true
        - name: picture_url
          in: query
          schema:
            type: string
        - name: required_licence
          in: query
          schema:
            type: string
          required: true
        - name: type
          in: query
          schema:
            type: string
        - name: bail
          in: query
          schema:
            type: number
        - name: maximum_capacity
          in: query
          schema:
            type: integer
          required: true
        - name: bedding_number
          in: query
          schema:
            type: integer
        - name: port
          in: query
          schema:
            type: string
        - name: latitude
          in: query
          schema:
            type: number
          required: true
        - name: longitude
          in: query
          schema:
            type: number
          required: true
        - name: engine_specification
          in: query
          schema:
            type: string
        - name: power
          in: query
          schema:
            type: integer
      tags:
        - Boats
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 1
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Success.
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 0
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Error.
      deprecated: false
    delete:
      summary: Delete one boat
      description: ''
      operationId: boats-delete
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      tags:
        - Boats
      responses:
        '200':
          description: 'details of one boat'
          content:
            '*/*' :
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Boats'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 0
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Error.
      deprecated: false
  /boats/findbybrand/{brand}:
    get:
      summary: Get boats by id brand
      description: ''
      operationId: boats-get-by-brand
      parameters:
        - name: brand
          in: path
          schema:
            type: string
          required: true
      tags:
        - Boats
      responses:
        '200':
          description: '200'
          content:
            '*/*' :
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Boats'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 0
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Error.
      deprecated: false
  /boats/findbyzone/{latitude}/{longitude}:
    get:
      summary: Get boats by id zone
      description: ''
      operationId: boats-get-by-zone
      parameters:
        - name: latitude
          in: path
          schema:
            type: number
          required: true
        - name: longitude
          in: path
          schema:
            type: number
          required: true
      tags:
        - Boats
      responses:
        '200':
          description: '200'
          content:
            '*/*' :
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Boats'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 0
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Error.
      deprecated: false
  /trips:
    post:
      summary: Create new trip
      description: ''
      operationId: trips-create
      parameters:
        - name: title
          in: query
          schema:
            type: string
          required: true
        - name: informations
          in: query
          schema:
            type: string
          required: true
        - name: trip_type
          in: query
          schema:
            type: string
          required: true
        - name: price_type
          in: query
          schema:
            type: string
          required: true
        - name: start_date
          in: query
          schema:
            type: string
          required: true
        - name: end_date
          in: query
          schema:
            type: string
          required: true
        - name: start_hour
          in: query
          schema:
            type: string
          required: true
        - name: end_hour
          in: query
          schema:
            type: string
          required: true
        - name: passenger_number
          in: query
          schema:
            type: integer
          required: true
        - name: price
          in: query
          schema:
            type: number
          required: true
        - name: creator_id
          in: query
          schema:
            type: integer
          required: true
        - name: boat_id
          in: query
          schema:
            type: integer
          required: true
      tags:
        - Trips
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 1
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Success.
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 0
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Error.
    put:
      summary: Modify one trip
      description: ''
      operationId: trips-modify
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - name: title
          in: query
          schema:
            type: string
          required: true
        - name: informations
          in: query
          schema:
            type: string
          required: true
        - name: trip_type
          in: query
          schema:
            type: string
          required: true
        - name: price_type
          in: query
          schema:
            type: string
          required: true
        - name: start_date
          in: query
          schema:
            type: string
          required: true
        - name: end_date
          in: query
          schema:
            type: string
          required: true
        - name: start_hour
          in: query
          schema:
            type: string
          required: true
        - name: end_hour
          in: query
          schema:
            type: string
          required: true
        - name: passenger_number
          in: query
          schema:
            type: integer
          required: true
        - name: price
          in: query
          schema:
            type: number
          required: true
      tags:
        - Trips
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 1
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Success.
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 0
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Error.
    delete:
      summary: Delete one trip
      description: ''
      operationId: trips-delete
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      tags:
        - Trips
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 1
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Success.
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 0
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Error.
  /trips/findbydate/{start_date}/{end_date}:
    get:
      summary: Get trips by date
      description: ''
      operationId: trips-by-date
      parameters:
        - name: start_date
          in: path
          schema:
            type: string
          required: true
        - name: end_date
          in: path
          schema:
            type: string
          required: true
      tags:
        - Trips
      responses:
        '200':
          description: '200'
          content:
            '*/*' :
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trips'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 0
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Error.
      deprecated: false
  /reservations:
    post:
      summary: Create new reservation
      description: ''
      operationId: reservations-create
      parameters:
        - name: reservation_date
          in: query
          schema:
            type: string
          required: true
        - name: seat_number
          in: query
          schema:
            type: integer
          required: true
        - name: price
          in: query
          schema:
            type: number
          required: true
        - name: user_id
          in: query
          schema:
            type: integer
          required: true
        - name: trip_id
          in: query
          schema:
            type: integer
          required: true
      tags:
        - Reservations
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 1
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Success.
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 0
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Error.
    put:
      summary: Modify one reservation
      description: ''
      operationId: reservations-modify
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - name: reservation_date
          in: query
          schema:
            type: string
          required: true
        - name: seat_number
          in: query
          schema:
            type: integer
          required: true
        - name: price
          in: query
          schema:
            type: number
          required: true
      tags:
        - Reservations
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 1
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Success.
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 0
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Error.
    delete:
      summary: Delete one reservation
      description: ''
      operationId: reservations-delete
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      tags:
        - Reservations
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 1
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Success.
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 0
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Error.
  /reservations/findbyreservationdate/{reservation_date}:
    get:
      summary: Get reservations by date
      description: ''
      operationId: reservationss-by-date
      parameters:
        - name: reservation_date
          in: path
          schema:
            type: string
          required: true
      tags:
        - Reservations
      responses:
        '200':
          description: '200'
          content:
            '*/*' :
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservations'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 0
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Error.
      deprecated: false
  /notebook_pages:
    post:
      summary: Create new page
      description: ''
      operationId: notebookpages-create
      parameters:
        - name: fish_name
          in: query
          schema:
            type: string
          required: true
        - name: fish_url
          in: query
          schema:
            type: string
        - name: comments
          in: query
          schema:
            type: string
        - name: size
          in: query
          schema:
            type: number
        - name: weight
          in: query
          schema:
            type: number
        - name: spot
          in: query
          schema:
            type: string
        - name: fishing_date
          in: query
          schema:
            type: string
        - name: release
          in: query
          schema:
            type: integer
        - name: notebook_id
          in: query
          schema:
            type: integer
          required: true
      tags:
        - Notebook pages
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 1
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Success.
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 0
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Error.
    put:
      summary: Modify one page
      description: ''
      operationId: notebookpages-modify
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - name: fish_name
          in: query
          schema:
            type: string
          required: true
        - name: fish_url
          in: query
          schema:
            type: string
        - name: comments
          in: query
          schema:
            type: string
        - name: size
          in: query
          schema:
            type: number
        - name: weight
          in: query
          schema:
            type: number
        - name: spot
          in: query
          schema:
            type: string
        - name: fishing_date
          in: query
          schema:
            type: string
        - name: release
          in: query
          schema:
            type: integer
      tags:
        - Notebook pages
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 1
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Success.
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 0
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Error.
    delete:
      summary: Delete one page
      description: ''
      operationId: notebookpages-delete
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      tags:
        - Notebook pages
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 1
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Success.
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 0
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Error.
  /notebook_pages/findbyfishingdate/{fishing_date}:
    get:
      summary: Get notebook_pages by date
      description: ''
      operationId: notebook-pages-by-date
      parameters:
        - name: fishing_date
          in: path
          schema:
            type: string
          required: true
      tags:
        - Notebook pages
      responses:
        '200':
          description: '200'
          content:
            '*/*' :
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notebook_pages'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result: {}
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    examples:
                      - 0
                    default: 0
                  status_message:
                    type: string
                    examples:
                      - Error.
      deprecated: false
components:
  schemas:
    Users:
      type: object
      properties:
        id:
          type: integer
        last_name:
          type: string
        first_name:
          type: string
        email:
          type: string
        password:
          type: string
        birth:
          type: string
        phone_number:
          type: integer
        addresse:
          type: string
        postal_code:
          type: integer
        city:
          type: string
        langue:
          type: string
        url_avatar:
          type: string
        boating_license_number:
          type: integer
        insurance_number:
          type: integer
        status:
          type: string
        company_name:
          type: string
        activity_type:
          type: string
        siret:
          type: integer
        RC:
          type: string
    Boats:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        brand:
          type: string
        production_year:
          type: string
        picture_url:
          type: string
        required_licence:
          type: string
        type:
          type: string
        bail:
          type: number
        maximum_capacity:
          type: integer
        port:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        engine_specification:
          type: string
        power:
          type: integer
        user_id:
          type: integer
    Reservations:
      type: object
      properties:
        id:
          type: integer
        reservation_date:
          type: string
        seat_number:
          type: integer
        price:
          type: number
        trip_id:
          type: integer
        user_id:
          type: integer
    Notebook_pages:
      type: object
      properties:
        id:
          type: integer
        fish_name:
          type: string
        fish_url:
          type: string
        comments:
          type: string
        size:
          type: number
        weight:
          type: number
        spot:
          type: string
        fishing_date:
          type: string
        release:
          type: integer
        notebook_id:
          type: integer
    Trips:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        informations:
          type: string
        trip_type:
          type: string
        price_type:
          type: string
        start_date:
          type: string
        end_date:
          type: string
        start_hour:
          type: string
        end_hour:
          type: string
        passenger_number:
          type: integer
        price:
          type: number
        creator_id:
          type: integer
        boat_id:
          type: integer
  securitySchemes:
    security-model1:
      type: apiKey
      in: header
      name: Authorization
      x-bearer-format: bearer
security:
  - security-model1: []